/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Kt2;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author giahuy
 */
// Khai báo renderer tùy chỉnh để hiển thị JCheckBox

public class frmCategory extends javax.swing.JFrame {

    /**
     * Creates new form frmCategory
     */
    private String fullName;
    private boolean authentication;
    public frmCategory(String fullName, boolean authentication) {
        initComponents();
        // Tạo một TableCellRenderer mới
        CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();

        // Đặt TableCellRenderer cho cột "Vô hiệu hóa" tại index 1
        tbCategory.getColumnModel().getColumn(1).setCellRenderer(checkBoxRenderer);
        this.fullName = fullName;
        lb_fullName.setText(fullName); 
        this.authentication = authentication;
        if(authentication == true){
            lb_authentication.setText("Admin");
        }else{
          lb_authentication.setText("Nhân viên bán hàng");
        }
    }

    private frmCategory() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public DefaultTableModel categoryList() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("STT");
        model.addColumn("VÔ HIỆU HÓA");
        model.addColumn("MÃ NHÓM MẶT HÀNG");
        model.addColumn("NHÓM MẶT HÀNG");
        model.addColumn("SỐ MẶT HÀNG");

        Connection connection = Connect_Database.connect();
        if (connection != null) {
            try {
                Statement st = connection.createStatement();
                ResultSet rs = st.executeQuery("SELECT LMH.MALOAI, LMH.TENLOAI, LMH.VOHIEUHOA, COUNT(MH.MAMH) AS SOMATHANG FROM LOAI_MAT_HANG LMH LEFT JOIN MAT_HANG MH ON LMH.MALOAI = MH.MALOAI GROUP BY LMH.MALOAI, LMH.TENLOAI, LMH.VOHIEUHOA");

                int count = 1;
                while (rs.next()) {
                    boolean voHieuHoaValue = rs.getBoolean("VOHIEUHOA");
                    String maLoai = rs.getString("MALOAI");
                    String tenLoai = rs.getString("TENLOAI");
                    int soluong = rs.getInt("SOMATHANG");

                    model.addRow(new Object[]{count, voHieuHoaValue, maLoai, tenLoai,  soluong});
                    count++;
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            } finally {
                Connect_Database.close(connection);
            }
        }
        return model;
    }
     
    public void loadDataTable() {
        DefaultTableModel model = categoryList();
        tbCategory.setModel(model);
        CheckBoxRenderer checkBoxRenderer = new CheckBoxRenderer();
        tbCategory.getColumnModel().getColumn(1).setCellRenderer(checkBoxRenderer);
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lb_authentication = new javax.swing.JLabel();
        lb_fullName = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCategory = new javax.swing.JTable();
        panelCategory = new javax.swing.JPanel();
        lbTTLMH = new javax.swing.JLabel();
        txtIdCategory = new javax.swing.JTextField();
        rdVHH = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNameCategory = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("VĂN PHÒNG PHẨM");

        lb_authentication.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_authentication.setText("Chức vụ:");

        lb_fullName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lb_fullName.setText("Họ tên");

        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_back.png"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_add.png"))); // NOI18N
        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_edit.png"))); // NOI18N
        btnEdit.setText("Sửa");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_delete.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_Save.png"))); // NOI18N
        btnSave.setText("Lưu");

        tbCategory.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tbCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoryMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbCategory);

        lbTTLMH.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lbTTLMH.setText("Thông tin loại mặt hàng");

        txtIdCategory.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        rdVHH.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        rdVHH.setText("Disable");
        rdVHH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdVHHActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Mã loại mặt hàng");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Loại Mặt Hàng");

        txtNameCategory.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        javax.swing.GroupLayout panelCategoryLayout = new javax.swing.GroupLayout(panelCategory);
        panelCategory.setLayout(panelCategoryLayout);
        panelCategoryLayout.setHorizontalGroup(
            panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCategoryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbTTLMH)
                    .addGroup(panelCategoryLayout.createSequentialGroup()
                        .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCategoryLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdCategory))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelCategoryLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(30, 30, 30)
                                .addComponent(txtNameCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(81, 81, 81)
                        .addComponent(rdVHH)))
                .addContainerGap(543, Short.MAX_VALUE))
        );
        panelCategoryLayout.setVerticalGroup(
            panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCategoryLayout.createSequentialGroup()
                .addComponent(lbTTLMH)
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCategoryLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIdCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(62, 62, 62))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCategoryLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdVHH)
                        .addGap(59, 59, 59)))
                .addGroup(panelCategoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNameCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        jTextField5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jButton8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btnSearch.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave)
                        .addGap(503, 503, 503))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addComponent(panelCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lb_authentication)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lb_fullName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(jTextField5))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(lb_authentication, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lb_fullName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBack))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelCategory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        frmProduct product = new frmProduct(fullName, authentication);
        product.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:                                      
        boolean VHH = false;
        if (rdVHH.isSelected()) {
            VHH = true;
        }
        Connection connection = Connect_Database.connect();
        if (connection != null) {
            try {
                String query = "INSERT INTO LOAI_MAT_HANG (MALOAI, TENLOAI, VOHIEUHOA) VALUES (?,?,?)";
                PreparedStatement pst = connection.prepareStatement(query);
                pst.setString(1, txtIdCategory.getText());
                pst.setString(2, txtNameCategory.getText());
                pst.setBoolean(3, VHH);
                int rowsInserted = pst.executeUpdate();
                if (rowsInserted > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm danh mục sản phẩm thành công!");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            } finally {
                Connect_Database.close(connection);
            }
        }
        loadDataTable();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        Connection connection = Connect_Database.connect();
        boolean VHH = false;
        if (rdVHH.isSelected()) {
            VHH = true;
        }
        if (connection != null) {
            try {
                String query = "UPDATE LOAI_MAT_HANG SET MALOAI = ?, TENLOAI = ?,VOHIEUHOA = ? WHERE MALOAI = ?";
                PreparedStatement pst = connection.prepareStatement(query);
                pst.setString(1, txtIdCategory.getText());
                pst.setString(2, txtNameCategory.getText());
                pst.setBoolean(3, VHH);
                pst.setString(4, txtIdCategory.getText());
                pst.executeUpdate();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.toString(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            } finally {
                Connect_Database.close(connection);
            }
        }
        loadDataTable();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       // Lấy dòng được chọn trong bảng
        int selectedRow = tbCategory.getSelectedRow();

        // Kiểm tra xem người dùng đã chọn một dòng hay chưa
        if (selectedRow != -1) {
            // Lấy giá trị của cột "Mã loại mặt hàng" từ dòng được chọn
            Object categoryIdObject = tbCategory.getValueAt(selectedRow, 1);

            // Kiểm tra xem giá trị có phải là null hay không
            if (categoryIdObject != null) {
                String categoryIdToDelete = categoryIdObject.toString();

                // Xác nhận xóa với người dùng
                int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa loại sản phẩm này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

                // Kiểm tra xem người dùng đã chọn Yes hay No
                if (option == JOptionPane.YES_OPTION) {
                    Connection connection = Connect_Database.connect();
                    if (connection != null) {
                        try {
                            // Chuẩn bị câu truy vấn SQL để xóa loại sản phẩm dựa trên ID
                            String query = "DELETE FROM LOAI_MAT_HANG WHERE MALOAI = ?";
                            PreparedStatement pst = connection.prepareStatement(query);
                            pst.setString(1, categoryIdToDelete);

                            // Thực hiện truy vấn xóa
                            int rowsAffected = pst.executeUpdate();

                            // Kiểm tra xem có dòng nào bị ảnh hưởng hay không
                            if (rowsAffected > 0) {
                                JOptionPane.showMessageDialog(this, "Xóa loại sản phẩm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "Không tìm thấy loại sản phẩm để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
                            }
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(this, ex.toString(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                        } finally {
                            Connect_Database.close(connection);
                        }
                    }

                    loadDataTable(); // Reload dữ liệu sau khi xóa
                }
            } else {
                // Hiển thị thông báo lỗi nếu không thể lấy giá trị của cột 'Mã loại mặt hàng'
                JOptionPane.showMessageDialog(this, "Không thể lấy giá trị của cột 'Mã loại mặt hàng'", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một loại sản phẩm để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void rdVHHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdVHHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdVHHActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        loadDataTable();
    }//GEN-LAST:event_formWindowOpened

    private void tbCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoryMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbCategory.getSelectedRow();

        if (selectedRow != -1) {
            // Lấy dữ liệu từ bảng và hiển thị lên panelCategory
            String maLoai = tbCategory.getValueAt(selectedRow, 2).toString();
            String tenLoai = tbCategory.getValueAt(selectedRow, 3).toString();
            boolean voHieuHoa = (boolean) tbCategory.getValueAt(selectedRow, 1);

            txtIdCategory.setText(maLoai);
            txtNameCategory.setText(tenLoai);
            rdVHH.setSelected(voHieuHoa);
        }
    }//GEN-LAST:event_tbCategoryMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JLabel lbTTLMH;
    private javax.swing.JLabel lb_authentication;
    private javax.swing.JLabel lb_fullName;
    private javax.swing.JPanel panelCategory;
    private javax.swing.JRadioButton rdVHH;
    private javax.swing.JTable tbCategory;
    private javax.swing.JTextField txtIdCategory;
    private javax.swing.JTextField txtNameCategory;
    // End of variables declaration//GEN-END:variables
}
